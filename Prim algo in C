#include <stdio.h>
#include <limits.h>

#define V 11 // Number of vertices based on the image

int minKey(int key[], int mstSet[]) {
    int min = INT_MAX, min_index = -1;
    for (int v = 0; v < V; v++) {
        if (!mstSet[v] && key[v] < min) {
            min = key[v];
            min_index = v;
        }
    }
    return min_index;
}

void printMST(int parent[], int graph[V][V]) {
    printf("Edge \t Weight\n");
    for (int i = 1; i < V; i++) {
        printf("%d - %d \t %d\n", parent[i], i, graph[i][parent[i]]);
    }
}

void primMST(int graph[V][V]) {
    int parent[V], key[V], mstSet[V];

    // Initialize keys to infinity and MST set to false
    for (int i = 0; i < V; i++) {
        key[i] = INT_MAX;
        mstSet[i] = 0;
    }

    key[0] = 0; 
    parent[0] = -1; 

    for (int count = 0; count < V - 1; count++) {
        int u = minKey(key, mstSet);
        if (u == -1) {
            printf("Graph may be disconnected, continuing with available nodes.\n");
            continue;
        }
        mstSet[u] = 1;

        for (int v = 0; v < V; v++) {
            if (graph[u][v] && !mstSet[v] && graph[u][v] < key[v]) {
                parent[v] = u;
                key[v] = graph[u][v];
            }
        }
    }

    printMST(parent, graph);
}

int main() {
    int graph[V][V] = {
        {0, 25, 0, 80, 0, 0, 0, 0, 0, 0, 0},
        {25, 0, 23, 40, 25, 0, 0, 0, 0, 0, 0},
        {0, 23, 0, 0, 20, 25, 0, 0, 0, 0, 0},
        {80, 40, 0, 0, 35, 0, 25, 55, 60, 0, 0},
        {0, 25, 20, 35, 0, 20, 0, 0, 0, 0, 0},
        {0, 0, 25, 0, 20, 0, 10, 0, 0, 0, 0},
        {0, 0, 0, 25, 0, 10, 0, 0, 0, 0, 0},
        {0, 0, 0, 55, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    };

    primMST(graph);

    return 0;
}
